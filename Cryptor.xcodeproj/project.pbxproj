// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"CommonCrypto::CommonCrypto::ProductTarget" /* CommonCrypto */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_29 /* Build configuration list for PBXAggregateTarget "CommonCrypto" */;
			buildPhases = (
			);
			dependencies = (
			);
			name = CommonCrypto;
			productName = CommonCrypto;
		};
		"Cryptor::CryptorPackageTests::ProductTarget" /* CryptorPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_55 /* Build configuration list for PBXAggregateTarget "CryptorPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_58 /* PBXTargetDependency */,
			);
			name = CryptorPackageTests;
			productName = CryptorPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_37 /* Crypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* Crypto.swift */; };
		OBJ_38 /* Cryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Cryptor.swift */; };
		OBJ_39 /* Digest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Digest.swift */; };
		OBJ_40 /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* HMAC.swift */; };
		OBJ_41 /* KeyDerivation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* KeyDerivation.swift */; };
		OBJ_42 /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Random.swift */; };
		OBJ_43 /* Status.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Status.swift */; };
		OBJ_44 /* StreamCryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* StreamCryptor.swift */; };
		OBJ_45 /* Updatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Updatable.swift */; };
		OBJ_46 /* Utilities.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Utilities.swift */; };
		OBJ_53 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_64 /* CryptorTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* CryptorTests.swift */; };
		OBJ_66 /* Cryptor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Cryptor::Cryptor::Product" /* Cryptor.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		4AEA00F5207CEA980025B1AD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Cryptor::Cryptor";
			remoteInfo = Cryptor;
		};
		4AEA00F6207CEA980025B1AD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Cryptor::CryptorTests";
			remoteInfo = CryptorTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"Cryptor::Cryptor::Product" /* Cryptor.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Cryptor.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Cryptor::CryptorTests::Product" /* CryptorTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = CryptorTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* Cryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cryptor.swift; sourceTree = "<group>"; };
		OBJ_11 /* Digest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Digest.swift; sourceTree = "<group>"; };
		OBJ_12 /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMAC.swift; sourceTree = "<group>"; };
		OBJ_13 /* KeyDerivation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyDerivation.swift; sourceTree = "<group>"; };
		OBJ_14 /* Random.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Random.swift; sourceTree = "<group>"; };
		OBJ_15 /* Status.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Status.swift; sourceTree = "<group>"; };
		OBJ_16 /* StreamCryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StreamCryptor.swift; sourceTree = "<group>"; };
		OBJ_17 /* Updatable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Updatable.swift; sourceTree = "<group>"; };
		OBJ_18 /* Utilities.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Utilities.swift; sourceTree = "<group>"; };
		OBJ_21 /* CryptorTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CryptorTests.swift; sourceTree = "<group>"; };
		OBJ_22 /* CommonCrypto */ = {isa = PBXFileReference; lastKnownFileType = folder; path = CommonCrypto; sourceTree = SOURCE_ROOT; };
		OBJ_23 /* Cryptor-iOS */ = {isa = PBXFileReference; lastKnownFileType = folder; path = "Cryptor-iOS"; sourceTree = SOURCE_ROOT; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* Crypto.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Crypto.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_47 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_65 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_66 /* Cryptor.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_19 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_20 /* CryptorTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_20 /* CryptorTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_21 /* CryptorTests.swift */,
			);
			name = CryptorTests;
			path = Tests/CryptorTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_24 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_25 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Cryptor::Cryptor::Product" /* Cryptor.framework */,
				"Cryptor::CryptorTests::Product" /* CryptorTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_19 /* Tests */,
				OBJ_22 /* CommonCrypto */,
				OBJ_23 /* Cryptor-iOS */,
				OBJ_24 /* Dependencies */,
				OBJ_25 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Cryptor */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* Cryptor */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Crypto.swift */,
				OBJ_10 /* Cryptor.swift */,
				OBJ_11 /* Digest.swift */,
				OBJ_12 /* HMAC.swift */,
				OBJ_13 /* KeyDerivation.swift */,
				OBJ_14 /* Random.swift */,
				OBJ_15 /* Status.swift */,
				OBJ_16 /* StreamCryptor.swift */,
				OBJ_17 /* Updatable.swift */,
				OBJ_18 /* Utilities.swift */,
			);
			name = Cryptor;
			path = Sources/Cryptor;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Cryptor::Cryptor" /* Cryptor */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_33 /* Build configuration list for PBXNativeTarget "Cryptor" */;
			buildPhases = (
				OBJ_36 /* Sources */,
				OBJ_47 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Cryptor;
			productName = Cryptor;
			productReference = "Cryptor::Cryptor::Product" /* Cryptor.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Cryptor::CryptorTests" /* CryptorTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_60 /* Build configuration list for PBXNativeTarget "CryptorTests" */;
			buildPhases = (
				OBJ_63 /* Sources */,
				OBJ_65 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_67 /* PBXTargetDependency */,
			);
			name = CryptorTests;
			productName = CryptorTests;
			productReference = "Cryptor::CryptorTests::Product" /* CryptorTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Cryptor::SwiftPMPackageDescription" /* CryptorPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_49 /* Build configuration list for PBXNativeTarget "CryptorPackageDescription" */;
			buildPhases = (
				OBJ_52 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CryptorPackageDescription;
			productName = CryptorPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Cryptor" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_25 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"CommonCrypto::CommonCrypto::ProductTarget" /* CommonCrypto */,
				"Cryptor::Cryptor" /* Cryptor */,
				"Cryptor::SwiftPMPackageDescription" /* CryptorPackageDescription */,
				"Cryptor::CryptorPackageTests::ProductTarget" /* CryptorPackageTests */,
				"Cryptor::CryptorTests" /* CryptorTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_36 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_37 /* Crypto.swift in Sources */,
				OBJ_38 /* Cryptor.swift in Sources */,
				OBJ_39 /* Digest.swift in Sources */,
				OBJ_40 /* HMAC.swift in Sources */,
				OBJ_41 /* KeyDerivation.swift in Sources */,
				OBJ_42 /* Random.swift in Sources */,
				OBJ_43 /* Status.swift in Sources */,
				OBJ_44 /* StreamCryptor.swift in Sources */,
				OBJ_45 /* Updatable.swift in Sources */,
				OBJ_46 /* Utilities.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_52 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_53 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_63 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_64 /* CryptorTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_58 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Cryptor::CryptorTests" /* CryptorTests */;
			targetProxy = 4AEA00F6207CEA980025B1AD /* PBXContainerItemProxy */;
		};
		OBJ_67 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Cryptor::Cryptor" /* Cryptor */;
			targetProxy = 4AEA00F5207CEA980025B1AD /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_30 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_31 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_34 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
				);
				INFOPLIST_FILE = Cryptor.xcodeproj/Cryptor_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Cryptor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Cryptor;
			};
			name = Debug;
		};
		OBJ_35 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
				);
				INFOPLIST_FILE = Cryptor.xcodeproj/Cryptor_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Cryptor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Cryptor;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_50 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_51 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_56 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_57 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_61 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
				);
				INFOPLIST_FILE = Cryptor.xcodeproj/CryptorTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = CryptorTests;
			};
			name = Debug;
		};
		OBJ_62 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/CommonCrypto.git-1219305460334093717",
				);
				INFOPLIST_FILE = Cryptor.xcodeproj/CryptorTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = CryptorTests;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "Cryptor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_29 /* Build configuration list for PBXAggregateTarget "CommonCrypto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_30 /* Debug */,
				OBJ_31 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_33 /* Build configuration list for PBXNativeTarget "Cryptor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_34 /* Debug */,
				OBJ_35 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_49 /* Build configuration list for PBXNativeTarget "CryptorPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_50 /* Debug */,
				OBJ_51 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_55 /* Build configuration list for PBXAggregateTarget "CryptorPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_56 /* Debug */,
				OBJ_57 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_60 /* Build configuration list for PBXNativeTarget "CryptorTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_61 /* Debug */,
				OBJ_62 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
